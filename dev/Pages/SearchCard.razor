@page "/searchCard"
@inherits SearchCardBase

<h1>Rechercher une carte</h1>

<div id="filters">
	<div id="grid-container">
		<h2 id="searchByNameText">Rechercher par nom (en anglais) : </h2>
		<input id="searchInput" placeholder="Nom de la carte (en anglais)" @bind-value="@SearchInput" />
		<input id="searchButton" type="button" value="Rechercher" @onclick="@Search" />

		<h2 id="searchByCardAndSetCode">Rechercher par le code de la carte et le code de l'extension : </h2>
		<input id="searchCardCode" placeholder="Code de la carte" @bind-value="@SearchCardCode" />
		<input id="searchSetCode" placeholder="Code de l'extension" @bind-value="@SearchSetCode" />
		<input id="searchButton2" type="button" value="Rechercher" @onclick="@SearchByCardCodeAndSetCode" />
	</div>
</div>

@if (Cards == null || SearchInput == "")
{
	<p><em>Pour effectuer une recherche, saisissez le nom ou une partie du nom dans le champ de saisie puis cliquez sur "Rechercher"</em></p>
}
else if (Cards.Count == 0)
{
	<p><em>Aucun carte ne correspond à votre recherche !</em></p>
}
else
{
	<p>Votre recherche comporte @NbCards résultats</p>
	@if (NbCards > 200)
	{
		<p>Seules les 200 premières cartes sont affichées (affinez votre recherche si vous ne trouvez pas la carte que vous cherchez)</p>
	}
	@*<button @onclick="@(() => _nav.NavigateTo("/sets"))">Retour</button>*@
	<div id="cardsList">
		@for (int i = 0; i < Cards.Count; i++)
		{
			<CardComponent Card="@Cards[i]" AllowAddToCollection="true" AllowRemoveFromCollection="false" />
		}
	</div>
}

@code {

}
